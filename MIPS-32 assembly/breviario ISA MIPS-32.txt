BREVIARIO ISTRUZIONI ISA MIPS-32 - VERSIONE RIDOTTA

---

ISTRUZIONI ARITMETICHE

add[u] rd, rs, rt		# rd <- rs + rt
addi[u] rt, rs, const	# rt <- rs + const
sub[u] rd, rs, rt		# rd <- rs - rt

mult[u] rd, rs, rt		# moltiplicazione 
multi[u] rt, rs, const	#
div[u] rd, rs, rt		# divisione
divi[u] rt, rs, const	#

---

LOAD E STORE

l[w h b] rt, const(rs)		# load word, load half, load byte
s[w h b] rt, const(rs)		# store word, store half, store byte
[l s][h b][u]				# load e store con estensione del segno 

---

OPERAZIONI LOGICHE BIT A BIT

and rd, rs, rt 		# and 
andi rt, const(rs)	
or rd, rs, rt 		# or
ori rt, const(rs)	
nor rd, rs, rt 		# nor

sll rd, rs, rt 		# shift left logical
srl rd, rs, rt 		# shift right logical

---

SALTI CONDIZIONATI

slt[u] rd, rs, rt 		# se rs < rt allora rd <- 1 ; altrimenti rd <- 0
slti[u] rt, rs, const	# formato I dell'istruzione precedente

beq rs, rt, LABEL		# se rs = rt allora PC <- LABEL 
bne rs, rt, LABEL		# se rs != rt allora PC <- LABEL

---

SALTI INCONDIZIONATI

j const		# jumo
jal const	# jump and link
jr rs		# jump register

---

