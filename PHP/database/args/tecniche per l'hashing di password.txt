E' BUONA NORMA EVITARE DI SALVARE LE PASSWORD IN CHIARO NEL DATABASE! meglio salvare l'impronta hash delle password anzichè direttamente le password.

---

ecco alcune funzioni per generare un hash a partire da una password:

md5(pass)
md5(pass, salt)
sha1(pass)

purtroppo esistono molti tool per decodificare i codici hash generati da queste funzioni, e questo rappresenta un grosso problema di sicurezza.

---

un metodo più sicuro per generare l'impronta hash della password è usare la funzione crypt():

crypt(pass, salt)

la funzione usa un algoritmo che dipende dal tipo di salt.

---

come si fa a controllare se due impronte hash coincidono? si usa il metodo

hash_equals(str1, str2)

che controlla se le due impronte hash corrispondono alla stessa stringa; restituisce un booleano.
funzione comoda ad esempio per verificare se la password immessa dall'utente corrisponde a quella memorizzata nel db.

---

altro metodo, forse meno macchinoso di crypt(): PHP mette a disposizione la funzione

password_hash( str, alg, ... opt ... )

che prende in argomento la password alla quale si associa l'hash, l'algoritmo da utilizzare per ottenere l'hash, e varie altre opzioni. le opzioni non sono necessarie.
ecco alcuni algoritmi:
	PASSWORD_DEFAULT
	PASSWORD_BCRYPT
	
metodo migliore di crypt dato che il salt viene generato automaticamente e non deve necessariamente essere inserito dal programmatore, eliminando così il rischio di commettere errori nella scrittura del salt.
per controllaree se due impronte hash corrispondono alla stessa stringa si utilizza il metodo

password_equals(str1, str2)

che prende in argomento due impronte hash e ritorna un booleano.

---

