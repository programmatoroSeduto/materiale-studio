SINTASSI DI BASE PER LE CLASSI IN PHP

---

per definire una classe in PHP si usa la keyword "class":

<?php
	class MyClass
	{
		//codice
	}
?>

i campi hanno questa sintassi:

<visibilità> $<nome-campo> = <valore-iniziale> ;

per i metodi la sintassi è praticamente identica:

<visibilità> function <nome-metodo>(<parametri-metodo>) {
	//codice...
}

---

come istanziare una classe? PHP offre una sintassi molto simile a quella del java: usare l'operatore new.

<?php
	$istanza = new MyClass()
?>

---

come accedere ai campi e ai metodi di una istanza? usare l'operatore arrow:

<?php
	//accesso ad un metodo dell'istanza
	$istanza->metodo();
	
	//accesso ad un campo pubblico dell'istanza
	$a = $istanza->campo;
?>

disponibile la keyword $this, con significato del tutto identico a quella nel java.

---

il costruttore della classe ha un nome particolare: __construct(). fa parte dei "metodi magici" a disposizione delle classi.
purtroppo PHP non supporta di base i costruttori multipli e l'overloading stile java! fortunatamente, si può aggirare il problema usando tecniche particolari:

ad esempio, adattando il comportamento del costruttore in base ai parametri forniti. 2 funzioni risultano estremamente utili:

funct_num_args()				numero di parametri passati alla funzione?
funct_get_arg(<idx>)			ritorna l'argomento numero <idx> tra quelli passati

va detto che ci sono metodi migliori per fare ciò. questa è una soluzione, ma altre più eleganti se ne possono trovare.

---

altro metodo magico molto importante nel mondo della programmazione server-side: __destruct() il distruttore, metodo chiamato prima di rimuovere definitivamente dalla memoria un'istanza da buttare via.

---

visibilità:

PUBLIC						possono accedere all'elemento tutti quelli che lo richiedono
PRIVATE						non può accedere nessuno dall'esterno all'elemento
PROTECTED					solo le classi figlie possono accedere all'elemento

---

