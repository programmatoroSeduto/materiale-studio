FUNZIONI UTILI PER LAVORARE CON LE STRINGHE

lunghezza della stringa				strlen(stringa)
sottostringa						substr(stringa, indice init, indice finale)

ESEMPIO:
<?php
	$data = '01/02/2016';
	$giorno = substr($data, 0, 2); 		// 01
	$mese   = substr($data, 3, 2); 		// 02
	$anno   = substr($data, 6);    		// 2016
	$giorno = substr($data, -10, 2); 	// 01
	$mese   = substr($data, -7, 2); 	// 01
	$anno   = substr($data, -4, 4); 	// 01
?>

verificare la presenza di una sottostringa
									strpos(stringa, sottostringa ricercata, posizione da cui iniziare la ricerca)
restituisce 
	l'indice da cui parte la PRIMA occorrenza della sottostringa
	altrimenti, se la sottostringa non è compresa, false
	
ESEMPIO:
<?php
	$stringa = 'La mia data di nascita è il 07 dicembre 1986';
	
	echo strpos($stringa, '1986'); // restituirà 41 che è la posizione in cui inizia la stringa 1986
	echo strpos($stringa, '1987'); // restituirà false perché non ci sono occorrenze
	
	$stringa = 'Simone è nato nel 1986';
	
	if (strpos($stringa, 'Simone') !== false) 
	{
		echo 'Il tuo nome è Simone';
	}
?>

invertire una stringa:			strrev(stringa)
restituisce la stringa invertita

sostituire TUTTE le occorrenze di una stringa:
								str_replace(search, replace, subject, count)
	parametri:
search					la sottostringa da cercare
replace					la sottostringa con cui sostituire search
subject					la stringa (variabile semplice, array, matrice, ...) da cui prendere la stringa da elaborare
count					(opzionale) variabile in cui memorizzare il numero di occorrenze sostituite
la funzione ritorna la stringa modificata; non modifica direttamente il contenuto della variabile subject.

ESEMPIO:
<?php
	$stringa = 'Il mio nome è Simone';
	echo str_replace('Simone', 'Luca', $stringa); // stamperà "Il mio nome è Luca"
	$stringhe = array(
		'Il mio nome è Simone',
		'Simone è nato nel 1986'
	);
	str_replace('Simone', 'Luca', $stringhe); // sostituirà tutte le occorrenze di Simone con Luca all'interno dell'array
?>

suddividere una stringa:		explode(separator, string, limit)
	parametri:
separator				il separatore, ovvero la sottostringa che indica il punto dove spezzare la stringa
					il separatore non rientra nella stringa ritornata dalla funzione
string					la stringa da elaborare; al solito stringa, matrice, array, ...
limit					(opzionale) numero massimo di elementi da estrarre
la funzione ritorna la stringa elaborata; anche qui, la sorgente non viene modificata.

ESEMPIO:
<?php
	$data = '01/02/2016';
	$elementi = explode('/', $data);
		// conterrà
		// Array
		// (
		//  [0] => 01
		//  [1] => 02
		//  [2] => 2016
		// )
	$data = implode('/', $elementi); //conterrà '01/02/2016'
?>

ricomponi una serie di stringe:
								implode(glue, pieces)
parametri:
glue					(la "colla") la stringa che separa i vari elementi della concatenazione
pieces					la struttura dati che contiene gli elementi da unire in un'unica stringa
ritorna la stringa costruita.

ESEMPIO:
<?php
	$data = '01/02/2016';
	$elementi = explode('/', $data);
		// conterrà
		// Array
		// (
		//  [0] => 01
		//  [1] => 02
		//  [2] => 2016
		// )
	$data = implode('/', $elementi); //conterrà '01/02/2016'
?>

tutto in maiuscolo:				strtoupper(stringa)
tutto in minuscolo:				strtolower(stringa)
prima lettera in minuscolo:		lcfirst(stringa)
prima lettera in maiuscolo:		ucfirst(stringa)
prima lettera di tutte le parole in maiuscolo:
								ucwords(stringa)
tutte restituiscono una copia della stringa.

rimuovi gli spazi non necessari:
								trim(stringa)
...solo a destra:				rtrim(stringa)
...solo a sinistra:				ltrim(stringa)
